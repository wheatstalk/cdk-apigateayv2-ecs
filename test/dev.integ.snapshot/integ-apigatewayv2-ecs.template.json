{
  "Resources": {
    "Vpc8378EB38": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "integ-apigatewayv2-ecs/Vpc"
          }
        ]
      }
    },
    "VpcpublicSubnet1Subnet2BB74ED7": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.0.0/21",
        "VpcId": {
          "Ref": "Vpc8378EB38"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "integ-apigatewayv2-ecs/Vpc/publicSubnet1"
          }
        ]
      }
    },
    "VpcpublicSubnet1RouteTable15C15F8E": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "Vpc8378EB38"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "integ-apigatewayv2-ecs/Vpc/publicSubnet1"
          }
        ]
      }
    },
    "VpcpublicSubnet1RouteTableAssociation4E83B6E4": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcpublicSubnet1RouteTable15C15F8E"
        },
        "SubnetId": {
          "Ref": "VpcpublicSubnet1Subnet2BB74ED7"
        }
      }
    },
    "VpcpublicSubnet1DefaultRouteB88F9E93": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcpublicSubnet1RouteTable15C15F8E"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VpcIGWD7BA715C"
        }
      },
      "DependsOn": [
        "VpcVPCGWBF912B6E"
      ]
    },
    "VpcpublicSubnet2SubnetE34B022A": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.8.0/21",
        "VpcId": {
          "Ref": "Vpc8378EB38"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "integ-apigatewayv2-ecs/Vpc/publicSubnet2"
          }
        ]
      }
    },
    "VpcpublicSubnet2RouteTableC5A6DF77": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "Vpc8378EB38"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "integ-apigatewayv2-ecs/Vpc/publicSubnet2"
          }
        ]
      }
    },
    "VpcpublicSubnet2RouteTableAssociationCCE257FF": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcpublicSubnet2RouteTableC5A6DF77"
        },
        "SubnetId": {
          "Ref": "VpcpublicSubnet2SubnetE34B022A"
        }
      }
    },
    "VpcpublicSubnet2DefaultRoute732F0BEB": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcpublicSubnet2RouteTableC5A6DF77"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VpcIGWD7BA715C"
        }
      },
      "DependsOn": [
        "VpcVPCGWBF912B6E"
      ]
    },
    "VpcIGWD7BA715C": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "integ-apigatewayv2-ecs/Vpc"
          }
        ]
      }
    },
    "VpcVPCGWBF912B6E": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "Vpc8378EB38"
        },
        "InternetGatewayId": {
          "Ref": "VpcIGWD7BA715C"
        }
      }
    },
    "ClusterEB0386A7": {
      "Type": "AWS::ECS::Cluster"
    },
    "ClusterDefaultServiceDiscoveryNamespaceC336F9B4": {
      "Type": "AWS::ServiceDiscovery::PrivateDnsNamespace",
      "Properties": {
        "Name": "dev2.local",
        "Vpc": {
          "Ref": "Vpc8378EB38"
        }
      }
    },
    "NginxTaskDefinitionTaskRoleED631B85": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      }
    },
    "NginxTaskDefinition60F15C8B": {
      "Type": "AWS::ECS::TaskDefinition",
      "Properties": {
        "ContainerDefinitions": [
          {
            "Essential": true,
            "Image": "nginx",
            "Name": "main",
            "PortMappings": [
              {
                "ContainerPort": 80,
                "Protocol": "tcp"
              }
            ]
          }
        ],
        "Cpu": "256",
        "Family": "integapigatewayv2ecsNginxTaskDefinitionD37806DA",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE"
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "NginxTaskDefinitionTaskRoleED631B85",
            "Arn"
          ]
        }
      }
    },
    "NginxServiceB96E6F5B": {
      "Type": "AWS::ECS::Service",
      "Properties": {
        "Cluster": {
          "Ref": "ClusterEB0386A7"
        },
        "DeploymentConfiguration": {
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50
        },
        "EnableECSManagedTags": false,
        "LaunchType": "FARGATE",
        "NetworkConfiguration": {
          "AwsvpcConfiguration": {
            "AssignPublicIp": "ENABLED",
            "SecurityGroups": [
              {
                "Fn::GetAtt": [
                  "NginxServiceSecurityGroup8D4F97B3",
                  "GroupId"
                ]
              }
            ],
            "Subnets": [
              {
                "Ref": "VpcpublicSubnet1Subnet2BB74ED7"
              },
              {
                "Ref": "VpcpublicSubnet2SubnetE34B022A"
              }
            ]
          }
        },
        "ServiceRegistries": [
          {
            "ContainerName": "main",
            "ContainerPort": 80,
            "RegistryArn": {
              "Fn::GetAtt": [
                "NginxServiceCloudmapServiceCB6B6532",
                "Arn"
              ]
            }
          }
        ],
        "TaskDefinition": {
          "Ref": "NginxTaskDefinition60F15C8B"
        }
      }
    },
    "NginxServiceCloudmapServiceCB6B6532": {
      "Type": "AWS::ServiceDiscovery::Service",
      "Properties": {
        "DnsConfig": {
          "DnsRecords": [
            {
              "TTL": 0,
              "Type": "SRV"
            }
          ],
          "NamespaceId": {
            "Fn::GetAtt": [
              "ClusterDefaultServiceDiscoveryNamespaceC336F9B4",
              "Id"
            ]
          },
          "RoutingPolicy": "MULTIVALUE"
        },
        "HealthCheckCustomConfig": {
          "FailureThreshold": 1
        },
        "Name": "nginx",
        "NamespaceId": {
          "Fn::GetAtt": [
            "ClusterDefaultServiceDiscoveryNamespaceC336F9B4",
            "Id"
          ]
        }
      }
    },
    "NginxServiceSecurityGroup8D4F97B3": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "integ-apigatewayv2-ecs/Nginx/Service/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38"
        }
      }
    },
    "NginxServiceSecurityGroupfromintegapigatewayv2ecsHttpApiDefaultRouteNginxResourcesSecurityGroupD80FA0B9ALLTRAFFIC40DE1842": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "-1",
        "Description": "from integapigatewayv2ecsHttpApiDefaultRouteNginxResourcesSecurityGroupD80FA0B9:ALL TRAFFIC",
        "GroupId": {
          "Fn::GetAtt": [
            "NginxServiceSecurityGroup8D4F97B3",
            "GroupId"
          ]
        },
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "HttpApiDefaultRouteNginxResourcesSecurityGroup61276AF6",
            "GroupId"
          ]
        }
      }
    },
    "NameTaskDefinitionTaskRoleC7964886": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      }
    },
    "NameTaskDefinition76317E68": {
      "Type": "AWS::ECS::TaskDefinition",
      "Properties": {
        "ContainerDefinitions": [
          {
            "Essential": true,
            "Image": "nathanpeck/name",
            "Name": "main",
            "PortMappings": [
              {
                "ContainerPort": 3000,
                "Protocol": "tcp"
              }
            ]
          }
        ],
        "Cpu": "256",
        "Family": "integapigatewayv2ecsNameTaskDefinitionC5401F43",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE"
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "NameTaskDefinitionTaskRoleC7964886",
            "Arn"
          ]
        }
      }
    },
    "NameService8DFDDE91": {
      "Type": "AWS::ECS::Service",
      "Properties": {
        "Cluster": {
          "Ref": "ClusterEB0386A7"
        },
        "DeploymentConfiguration": {
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50
        },
        "EnableECSManagedTags": false,
        "LaunchType": "FARGATE",
        "NetworkConfiguration": {
          "AwsvpcConfiguration": {
            "AssignPublicIp": "ENABLED",
            "SecurityGroups": [
              {
                "Fn::GetAtt": [
                  "NameServiceSecurityGroupCF7B1A0B",
                  "GroupId"
                ]
              }
            ],
            "Subnets": [
              {
                "Ref": "VpcpublicSubnet1Subnet2BB74ED7"
              },
              {
                "Ref": "VpcpublicSubnet2SubnetE34B022A"
              }
            ]
          }
        },
        "ServiceRegistries": [
          {
            "ContainerName": "main",
            "ContainerPort": 3000,
            "RegistryArn": {
              "Fn::GetAtt": [
                "NameServiceCloudmapService8F46EC9E",
                "Arn"
              ]
            }
          }
        ],
        "TaskDefinition": {
          "Ref": "NameTaskDefinition76317E68"
        }
      }
    },
    "NameServiceCloudmapService8F46EC9E": {
      "Type": "AWS::ServiceDiscovery::Service",
      "Properties": {
        "DnsConfig": {
          "DnsRecords": [
            {
              "TTL": 0,
              "Type": "SRV"
            }
          ],
          "NamespaceId": {
            "Fn::GetAtt": [
              "ClusterDefaultServiceDiscoveryNamespaceC336F9B4",
              "Id"
            ]
          },
          "RoutingPolicy": "MULTIVALUE"
        },
        "HealthCheckCustomConfig": {
          "FailureThreshold": 1
        },
        "Name": "name2",
        "NamespaceId": {
          "Fn::GetAtt": [
            "ClusterDefaultServiceDiscoveryNamespaceC336F9B4",
            "Id"
          ]
        }
      }
    },
    "NameServiceSecurityGroupCF7B1A0B": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "integ-apigatewayv2-ecs/Name/Service/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38"
        }
      }
    },
    "NameServiceSecurityGroupfromintegapigatewayv2ecsHttpApiANYnameNameResourcesSecurityGroup9D60F95BALLTRAFFIC43B508E5": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "-1",
        "Description": "from integapigatewayv2ecsHttpApiANYnameNameResourcesSecurityGroup9D60F95B:ALL TRAFFIC",
        "GroupId": {
          "Fn::GetAtt": [
            "NameServiceSecurityGroupCF7B1A0B",
            "GroupId"
          ]
        },
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "HttpApiANYnameNameResourcesSecurityGroup3AC4C94E",
            "GroupId"
          ]
        }
      }
    },
    "GreetingTaskDefinitionTaskRoleC1EDBD22": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      }
    },
    "GreetingTaskDefinition8B9AA41F": {
      "Type": "AWS::ECS::TaskDefinition",
      "Properties": {
        "ContainerDefinitions": [
          {
            "Essential": true,
            "Image": "nathanpeck/greeting",
            "Name": "main",
            "PortMappings": [
              {
                "ContainerPort": 3000,
                "Protocol": "tcp"
              }
            ]
          }
        ],
        "Cpu": "256",
        "Family": "integapigatewayv2ecsGreetingTaskDefinition40FE82C7",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE"
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "GreetingTaskDefinitionTaskRoleC1EDBD22",
            "Arn"
          ]
        }
      }
    },
    "GreetingServiceB1C14E0E": {
      "Type": "AWS::ECS::Service",
      "Properties": {
        "Cluster": {
          "Ref": "ClusterEB0386A7"
        },
        "DeploymentConfiguration": {
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50
        },
        "EnableECSManagedTags": false,
        "LaunchType": "FARGATE",
        "NetworkConfiguration": {
          "AwsvpcConfiguration": {
            "AssignPublicIp": "ENABLED",
            "SecurityGroups": [
              {
                "Fn::GetAtt": [
                  "GreetingServiceSecurityGroup8EC2D07E",
                  "GroupId"
                ]
              }
            ],
            "Subnets": [
              {
                "Ref": "VpcpublicSubnet1Subnet2BB74ED7"
              },
              {
                "Ref": "VpcpublicSubnet2SubnetE34B022A"
              }
            ]
          }
        },
        "ServiceRegistries": [
          {
            "ContainerName": "main",
            "ContainerPort": 3000,
            "RegistryArn": {
              "Fn::GetAtt": [
                "GreetingServiceCloudmapService2719CF35",
                "Arn"
              ]
            }
          }
        ],
        "TaskDefinition": {
          "Ref": "GreetingTaskDefinition8B9AA41F"
        }
      }
    },
    "GreetingServiceCloudmapService2719CF35": {
      "Type": "AWS::ServiceDiscovery::Service",
      "Properties": {
        "DnsConfig": {
          "DnsRecords": [
            {
              "TTL": 0,
              "Type": "SRV"
            }
          ],
          "NamespaceId": {
            "Fn::GetAtt": [
              "ClusterDefaultServiceDiscoveryNamespaceC336F9B4",
              "Id"
            ]
          },
          "RoutingPolicy": "MULTIVALUE"
        },
        "HealthCheckCustomConfig": {
          "FailureThreshold": 1
        },
        "Name": "greeting",
        "NamespaceId": {
          "Fn::GetAtt": [
            "ClusterDefaultServiceDiscoveryNamespaceC336F9B4",
            "Id"
          ]
        }
      }
    },
    "GreetingServiceSecurityGroup8EC2D07E": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "integ-apigatewayv2-ecs/Greeting/Service/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38"
        }
      }
    },
    "GreetingServiceSecurityGroupfromintegapigatewayv2ecsHttpApiANYgreetingGreetingResourcesSecurityGroupC94AD5FBALLTRAFFICACB7C7C4": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "-1",
        "Description": "from integapigatewayv2ecsHttpApiANYgreetingGreetingResourcesSecurityGroupC94AD5FB:ALL TRAFFIC",
        "GroupId": {
          "Fn::GetAtt": [
            "GreetingServiceSecurityGroup8EC2D07E",
            "GroupId"
          ]
        },
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "HttpApiANYgreetingGreetingResourcesSecurityGroupDDBF0AC1",
            "GroupId"
          ]
        }
      }
    },
    "HttpApiF5A9A8A7": {
      "Type": "AWS::ApiGatewayV2::Api",
      "Properties": {
        "Name": "HttpApi",
        "ProtocolType": "HTTP"
      }
    },
    "HttpApiDefaultRouteNginxResourcesSecurityGroup61276AF6": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "integ-apigatewayv2-ecs/HttpApi/DefaultRoute/NginxResources/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38"
        }
      }
    },
    "HttpApiDefaultRouteNginxResourcesVpcLink6B229F46": {
      "Type": "AWS::ApiGatewayV2::VpcLink",
      "Properties": {
        "Name": "integapigatewayv2ecsHttpApiDefaultRouteNginxResourcesVpcLink9EE40EE0",
        "SubnetIds": [
          {
            "Ref": "VpcpublicSubnet1Subnet2BB74ED7"
          },
          {
            "Ref": "VpcpublicSubnet2SubnetE34B022A"
          }
        ],
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "HttpApiDefaultRouteNginxResourcesSecurityGroup61276AF6",
              "GroupId"
            ]
          }
        ]
      }
    },
    "HttpApiDefaultRouteNginx04E62C39": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApiF5A9A8A7"
        },
        "IntegrationType": "HTTP_PROXY",
        "ConnectionId": {
          "Ref": "HttpApiDefaultRouteNginxResourcesVpcLink6B229F46"
        },
        "ConnectionType": "VPC_LINK",
        "IntegrationMethod": "ANY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "NginxServiceCloudmapServiceCB6B6532",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "1.0"
      }
    },
    "HttpApiDefaultRoute146696CE": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApiF5A9A8A7"
        },
        "RouteKey": "$default",
        "AuthorizationType": "NONE",
        "Target": {
          "Fn::Join": [
            "",
            [
              "integrations/",
              {
                "Ref": "HttpApiDefaultRouteNginx04E62C39"
              }
            ]
          ]
        }
      }
    },
    "HttpApiDefaultStage3EEB07D6": {
      "Type": "AWS::ApiGatewayV2::Stage",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApiF5A9A8A7"
        },
        "StageName": "$default",
        "AutoDeploy": true
      }
    },
    "HttpApiANYnameNameResourcesSecurityGroup3AC4C94E": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "integ-apigatewayv2-ecs/HttpApi/ANY--name/NameResources/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38"
        }
      }
    },
    "HttpApiANYnameNameResourcesVpcLink4EF60AE3": {
      "Type": "AWS::ApiGatewayV2::VpcLink",
      "Properties": {
        "Name": "integapigatewayv2ecsHttpApiANYnameNameResourcesVpcLink229CA65B",
        "SubnetIds": [
          {
            "Ref": "VpcpublicSubnet1Subnet2BB74ED7"
          },
          {
            "Ref": "VpcpublicSubnet2SubnetE34B022A"
          }
        ],
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "HttpApiANYnameNameResourcesSecurityGroup3AC4C94E",
              "GroupId"
            ]
          }
        ]
      }
    },
    "HttpApiANYnameNameA5D83D01": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApiF5A9A8A7"
        },
        "IntegrationType": "HTTP_PROXY",
        "ConnectionId": {
          "Ref": "HttpApiANYnameNameResourcesVpcLink4EF60AE3"
        },
        "ConnectionType": "VPC_LINK",
        "IntegrationMethod": "ANY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "NameServiceCloudmapService8F46EC9E",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "1.0"
      }
    },
    "HttpApiANYname00EA5AFD": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApiF5A9A8A7"
        },
        "RouteKey": "ANY /name",
        "AuthorizationType": "NONE",
        "Target": {
          "Fn::Join": [
            "",
            [
              "integrations/",
              {
                "Ref": "HttpApiANYnameNameA5D83D01"
              }
            ]
          ]
        }
      }
    },
    "HttpApiANYgreetingGreetingResourcesSecurityGroupDDBF0AC1": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "integ-apigatewayv2-ecs/HttpApi/ANY--greeting/GreetingResources/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38"
        }
      }
    },
    "HttpApiANYgreetingGreetingResourcesVpcLinkD7584212": {
      "Type": "AWS::ApiGatewayV2::VpcLink",
      "Properties": {
        "Name": "integapigatewayv2ecsHttpApiANYgreetingGreetingResourcesVpcLink4E2457C5",
        "SubnetIds": [
          {
            "Ref": "VpcpublicSubnet1Subnet2BB74ED7"
          },
          {
            "Ref": "VpcpublicSubnet2SubnetE34B022A"
          }
        ],
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "HttpApiANYgreetingGreetingResourcesSecurityGroupDDBF0AC1",
              "GroupId"
            ]
          }
        ]
      }
    },
    "HttpApiANYgreetingGreetingAFB449F2": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApiF5A9A8A7"
        },
        "IntegrationType": "HTTP_PROXY",
        "ConnectionId": {
          "Ref": "HttpApiANYgreetingGreetingResourcesVpcLinkD7584212"
        },
        "ConnectionType": "VPC_LINK",
        "IntegrationMethod": "ANY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "GreetingServiceCloudmapService2719CF35",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "1.0"
      }
    },
    "HttpApiANYgreeting289B1AB2": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApiF5A9A8A7"
        },
        "RouteKey": "ANY /greeting",
        "AuthorizationType": "NONE",
        "Target": {
          "Fn::Join": [
            "",
            [
              "integrations/",
              {
                "Ref": "HttpApiANYgreetingGreetingAFB449F2"
              }
            ]
          ]
        }
      }
    }
  },
  "Outputs": {
    "ApiUrl": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "HttpApiF5A9A8A7"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/"
          ]
        ]
      }
    }
  },
  "Parameters": {
    "BootstrapVersion": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
    }
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5"
                  ],
                  {
                    "Ref": "BootstrapVersion"
                  }
                ]
              }
            ]
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
        }
      ]
    }
  }
}